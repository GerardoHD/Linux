#!/bin/bash
#echo	------==Script Creado por GerardoHD==------
#echo https://www.github.com/GerardoHD/Linux
#echo Script creado para crear Imagen de Kernel Unificada para UEFI Boot
#echo Se distribuye con la esperanza de que sea útil, pero sin ninguna garantía
#sleep 1s
#Usando MOK
#cp /boot/EFI/systemd/systemd-bootx64.efi /boot/EFI/BOOT/grubx64.efi
#cp /usr/share/shim-signed/shimx64.efi /boot/EFI/BOOT/BOOTX64.efi
#cp /usr/share/shim-signed/mmx64.efi /boot/EFI/BOOT/
#
#echo Firmando archivos para Secure Boot...
#sbsign --key /root/efi-keys-MOK/MOK.key --cert /root/efi-keys-MOK/MOK.crt --output /boot/EFI/BOOT/grubx64.efi /boot/EFI/BOOT/grubx64.efi
#sbsign --key /root/efi-keys-MOK/MOK.key --cert /root/efi-keys-MOK/MOK.crt --output /boot/EFI/grub/grubx64.efi /boot/EFI/grub/grubx64.efi
#sbsign --key /root/efi-keys-MOK/MOK.key --cert /root/efi-keys-MOK/MOK.crt --output /boot/EFI/systemd/systemd-bootx64.efi /boot/EFI/systemd/systemd-bootx64.efi
#sbsign --key /root/efi-keys-MOK/MOK.key --cert /root/efi-keys-MOK/MOK.crt --output /boot/vmlinuz-linux /boot/vmlinuz-linux
#
#echo -Verificando firmas-
#sbverify --cert /root/efi-keys-MOK/MOK.crt /boot/EFI/BOOT/grubx64.efi
#sbverify --cert /root/efi-keys-MOK/MOK.crt /boot/EFI/grub/grubx64.efi
#sbverify --cert /root/efi-keys-MOK/MOK.crt /boot/EFI/systemd/systemd-bootx64.efi
#sbverify --cert /root/efi-keys-MOK/MOK.crt /boot/vmlinuz-linux
#
#Usando Platform Key Infrastructure
echo Creando Arch Linux Unified Kernel Image...
rm /boot/EFI/Linux/Arch-signed.efi
rm /root/Arch-signed/Initramfs-Intel.img
cat /boot/intel-ucode.img /boot/initramfs-linux.img >> /root/Arch-signed/Initramfs-Intel.img
#
objcopy \
    --add-section .osrel="/etc/os-release"                              --change-section-vma .osrel=0x20000    \
    --add-section .cmdline="/root/Arch-signed/cmdline.txt"              --change-section-vma .cmdline=0x30000  \
    --add-section .splash="/usr/share/systemd/bootctl/splash-arch.bmp"  --change-section-vma .splash=0x40000   \
    --add-section .linux="/boot/vmlinuz-linux"                          --change-section-vma .linux=0x2000000  \
    --add-section .initrd="/root/Arch-signed/Initramfs-Intel.img"       --change-section-vma .initrd=0x3000000 \
    /usr/lib/systemd/boot/efi/linuxx64.efi.stub /boot/EFI/Linux/Arch-signed.efi
#
echo Firmando archivos para Secure Boot...
sbsign --key /root/efi-keys/db_arch.key --cert /root/efi-keys/db_arch.pem --output /boot/EFI/Linux/Arch-signed.efi /boot/EFI/Linux/Arch-signed.efi
sbsign --key /root/efi-keys/db_arch.key --cert /root/efi-keys/db_arch.pem --output /boot/vmlinuz-linux /boot/vmlinuz-linux
sbsign --key /root/efi-keys/db_arch.key --cert /root/efi-keys/db_arch.pem --output /boot/EFI/BOOT/BOOTX64.EFI /boot/EFI/BOOT/BOOTX64.EFI
sbsign --key /root/efi-keys/db_arch.key --cert /root/efi-keys/db_arch.pem --output /boot/EFI/systemd/systemd-bootx64.efi /boot/EFI/systemd/systemd-bootx64.efi
sbsign --key /root/efi-keys/db_arch.key --cert /root/efi-keys/db_arch.pem --output /boot/EFI/grub/grubx64.efi /boot/EFI/grub/grubx64.efi
